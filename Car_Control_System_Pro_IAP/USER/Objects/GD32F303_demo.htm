<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\GD32F303_demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\GD32F303_demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Jan 06 16:13:58 2023
<BR><P>
<H3>Maximum Stack Usage =       2276 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Ymodem_Receive &rArr; Receive_packet &rArr; Receive_byte &rArr; Get_deta_T
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1e]">ADC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC0_1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC0_1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3b]">ADC2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from gd32f30x_it.o(i.BusFault_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[22]">CAN0_EWMC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[21]">CAN0_RX1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[17]">DMA0_Channel0_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[18]">DMA0_Channel1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[19]">DMA0_Channel2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[1a]">DMA0_Channel3_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[1b]">DMA0_Channel4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[1c]">DMA0_Channel5_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[1d]">DMA0_Channel6_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[44]">DMA1_Channel0_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[45]">DMA1_Channel1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[46]">DMA1_Channel2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[47]">DMA1_Channel3_4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from gd32f30x_it.o(i.DebugMon_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3c]">EXMC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[12]">EXTI0_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[34]">EXTI10_15_IRQHandler</a> from exti_drv.o(i.EXTI10_15_IRQHandler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[13]">EXTI1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[14]">EXTI2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[15]">EXTI3_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[16]">EXTI4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[23]">EXTI5_9_IRQHandler</a> from exti_drv.o(i.EXTI5_9_IRQHandler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[10]">FMC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[4e]">GPIO0_GET</a> from gpio_drv.o(i.GPIO0_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[4b]">GPIO0_HIGH</a> from gpio_drv.o(i.GPIO0_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[4c]">GPIO0_LOW</a> from gpio_drv.o(i.GPIO0_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[4f]">GPIO0_MODE</a> from gpio_drv.o(i.GPIO0_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[4d]">GPIO0_TOGGLE</a> from gpio_drv.o(i.GPIO0_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[80]">GPIO10_GET</a> from gpio_drv.o(i.GPIO10_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[7d]">GPIO10_HIGH</a> from gpio_drv.o(i.GPIO10_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[7e]">GPIO10_LOW</a> from gpio_drv.o(i.GPIO10_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[81]">GPIO10_MODE</a> from gpio_drv.o(i.GPIO10_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[7f]">GPIO10_TOGGLE</a> from gpio_drv.o(i.GPIO10_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[85]">GPIO11_GET</a> from gpio_drv.o(i.GPIO11_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[82]">GPIO11_HIGH</a> from gpio_drv.o(i.GPIO11_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[83]">GPIO11_LOW</a> from gpio_drv.o(i.GPIO11_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[86]">GPIO11_MODE</a> from gpio_drv.o(i.GPIO11_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[84]">GPIO11_TOGGLE</a> from gpio_drv.o(i.GPIO11_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[8a]">GPIO12_GET</a> from gpio_drv.o(i.GPIO12_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[87]">GPIO12_HIGH</a> from gpio_drv.o(i.GPIO12_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[88]">GPIO12_LOW</a> from gpio_drv.o(i.GPIO12_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[8b]">GPIO12_MODE</a> from gpio_drv.o(i.GPIO12_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[89]">GPIO12_TOGGLE</a> from gpio_drv.o(i.GPIO12_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[8f]">GPIO13_GET</a> from gpio_drv.o(i.GPIO13_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[8c]">GPIO13_HIGH</a> from gpio_drv.o(i.GPIO13_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[8d]">GPIO13_LOW</a> from gpio_drv.o(i.GPIO13_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[90]">GPIO13_MODE</a> from gpio_drv.o(i.GPIO13_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[8e]">GPIO13_TOGGLE</a> from gpio_drv.o(i.GPIO13_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[94]">GPIO14_GET</a> from gpio_drv.o(i.GPIO14_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[91]">GPIO14_HIGH</a> from gpio_drv.o(i.GPIO14_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[92]">GPIO14_LOW</a> from gpio_drv.o(i.GPIO14_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[95]">GPIO14_MODE</a> from gpio_drv.o(i.GPIO14_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[93]">GPIO14_TOGGLE</a> from gpio_drv.o(i.GPIO14_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[99]">GPIO15_GET</a> from gpio_drv.o(i.GPIO15_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[96]">GPIO15_HIGH</a> from gpio_drv.o(i.GPIO15_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[97]">GPIO15_LOW</a> from gpio_drv.o(i.GPIO15_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[9a]">GPIO15_MODE</a> from gpio_drv.o(i.GPIO15_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[98]">GPIO15_TOGGLE</a> from gpio_drv.o(i.GPIO15_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[53]">GPIO1_GET</a> from gpio_drv.o(i.GPIO1_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[50]">GPIO1_HIGH</a> from gpio_drv.o(i.GPIO1_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[51]">GPIO1_LOW</a> from gpio_drv.o(i.GPIO1_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[54]">GPIO1_MODE</a> from gpio_drv.o(i.GPIO1_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[52]">GPIO1_TOGGLE</a> from gpio_drv.o(i.GPIO1_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[58]">GPIO2_GET</a> from gpio_drv.o(i.GPIO2_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[55]">GPIO2_HIGH</a> from gpio_drv.o(i.GPIO2_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[56]">GPIO2_LOW</a> from gpio_drv.o(i.GPIO2_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[59]">GPIO2_MODE</a> from gpio_drv.o(i.GPIO2_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[57]">GPIO2_TOGGLE</a> from gpio_drv.o(i.GPIO2_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[5d]">GPIO3_GET</a> from gpio_drv.o(i.GPIO3_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[5a]">GPIO3_HIGH</a> from gpio_drv.o(i.GPIO3_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[5b]">GPIO3_LOW</a> from gpio_drv.o(i.GPIO3_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[5e]">GPIO3_MODE</a> from gpio_drv.o(i.GPIO3_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[5c]">GPIO3_TOGGLE</a> from gpio_drv.o(i.GPIO3_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[62]">GPIO4_GET</a> from gpio_drv.o(i.GPIO4_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[5f]">GPIO4_HIGH</a> from gpio_drv.o(i.GPIO4_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[60]">GPIO4_LOW</a> from gpio_drv.o(i.GPIO4_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[63]">GPIO4_MODE</a> from gpio_drv.o(i.GPIO4_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[61]">GPIO4_TOGGLE</a> from gpio_drv.o(i.GPIO4_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[67]">GPIO5_GET</a> from gpio_drv.o(i.GPIO5_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[64]">GPIO5_HIGH</a> from gpio_drv.o(i.GPIO5_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[65]">GPIO5_LOW</a> from gpio_drv.o(i.GPIO5_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[68]">GPIO5_MODE</a> from gpio_drv.o(i.GPIO5_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[66]">GPIO5_TOGGLE</a> from gpio_drv.o(i.GPIO5_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[6c]">GPIO6_GET</a> from gpio_drv.o(i.GPIO6_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[69]">GPIO6_HIGH</a> from gpio_drv.o(i.GPIO6_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[6a]">GPIO6_LOW</a> from gpio_drv.o(i.GPIO6_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[6d]">GPIO6_MODE</a> from gpio_drv.o(i.GPIO6_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[6b]">GPIO6_TOGGLE</a> from gpio_drv.o(i.GPIO6_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[71]">GPIO7_GET</a> from gpio_drv.o(i.GPIO7_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[6e]">GPIO7_HIGH</a> from gpio_drv.o(i.GPIO7_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[6f]">GPIO7_LOW</a> from gpio_drv.o(i.GPIO7_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[72]">GPIO7_MODE</a> from gpio_drv.o(i.GPIO7_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[70]">GPIO7_TOGGLE</a> from gpio_drv.o(i.GPIO7_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[76]">GPIO8_GET</a> from gpio_drv.o(i.GPIO8_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[73]">GPIO8_HIGH</a> from gpio_drv.o(i.GPIO8_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[74]">GPIO8_LOW</a> from gpio_drv.o(i.GPIO8_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[77]">GPIO8_MODE</a> from gpio_drv.o(i.GPIO8_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[75]">GPIO8_TOGGLE</a> from gpio_drv.o(i.GPIO8_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[7b]">GPIO9_GET</a> from gpio_drv.o(i.GPIO9_GET) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[78]">GPIO9_HIGH</a> from gpio_drv.o(i.GPIO9_HIGH) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[79]">GPIO9_LOW</a> from gpio_drv.o(i.GPIO9_LOW) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[7c]">GPIO9_MODE</a> from gpio_drv.o(i.GPIO9_MODE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[7a]">GPIO9_TOGGLE</a> from gpio_drv.o(i.GPIO9_TOGGLE) referenced from gpio_drv.o(i.all_gpio_init)
 <LI><a href="#[4]">HardFault_Handler</a> from gd32f30x_it.o(i.HardFault_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2c]">I2C0_ER_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2b]">I2C0_EV_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2e]">I2C1_ER_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2d]">I2C1_EV_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[d]">LVD_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from gd32f30x_it.o(i.MemManage_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from gd32f30x_it.o(i.NMI_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from gd32f30x_it.o(i.PendSV_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[11]">RCU_CTC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[35]">RTC_Alarm_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[f]">RTC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3d]">SDIO_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2f]">SPI0_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3f]">SPI2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from gd32f30x_it.o(i.SVC_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from system_time.o(i.SysTick_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[48]">SystemInit</a> from system_gd32f30x.o(i.SystemInit) referenced from startup_gd32f30x_hd.o(.text)
 <LI><a href="#[e]">TAMPER_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[24]">TIMER0_BRK_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[27]">TIMER0_Channel_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[26]">TIMER0_TRG_CMT_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[25]">TIMER0_UP_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[28]">TIMER1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[29]">TIMER2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2a]">TIMER3_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3e]">TIMER4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[42]">TIMER5_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[43]">TIMER6_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[37]">TIMER7_BRK_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3a]">TIMER7_Channel_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[39]">TIMER7_TRG_CMT_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[38]">TIMER7_UP_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[40]">UART3_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[41]">UART4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[31]">USART0_IRQHandler</a> from usart_drv.o(i.USART0_IRQHandler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[32]">USART1_IRQHandler</a> from usart_drv.o(i.USART1_IRQHandler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from usart_drv.o(i.USART2_IRQHandler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[1f]">USBD_HP_CAN0_TX_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[20]">USBD_LP_CAN0_RX0_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[36]">USBD_WKUP_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from gd32f30x_it.o(i.UsageFault_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[c]">WWDGT_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[4a]">Ymodem_Recive_Callback</a> from ymodem.o(i.Ymodem_Recive_Callback) referenced from ymodem.o(i.Ymodem_init)
 <LI><a href="#[9b]">__main</a> from __main.o(!!!main) referenced from startup_gd32f30x_hd.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[9b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[9c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[9e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[104]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[105]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[9f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[106]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[a5]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[a0]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[107]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[108]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[109]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[10a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[10b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[10c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[10d]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[10e]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[10f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[110]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[111]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[112]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[113]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[114]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[115]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[116]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[117]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[118]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[119]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[11a]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[11b]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[11c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[11d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[11e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[11f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[120]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[121]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[9d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[122]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[a2]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a4]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[123]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[a6]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 2276 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Ymodem_Receive &rArr; Receive_packet &rArr; Receive_byte &rArr; Get_deta_T
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[124]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[af]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a9]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[125]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[ab]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA1_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER0_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER0_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIMER0_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIMER7_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIMER7_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIMER7_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USBD_HP_CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USBD_LP_CAN0_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USBD_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ae]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[cd]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_struct
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[126]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[a8]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[12c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[12d]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[12e]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[130]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, exti_drv.o(i.EXTI10_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI10_15_IRQHandler &rArr; exti_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, exti_drv.o(i.EXTI5_9_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI5_9_IRQHandler &rArr; exti_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>Flash_Erase</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, flash_drv.o(i.Flash_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Flash_Erase &rArr; fmc_page_erase &rArr; fmc_bank1_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[b6]"></a>Flash_Write</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, flash_drv.o(i.Flash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Flash_Write &rArr; delay_us &rArr; Get_deta_T
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[4e]"></a>GPIO0_GET</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO0_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO0_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[4b]"></a>GPIO0_HIGH</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO0_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO0_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[4c]"></a>GPIO0_LOW</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO0_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO0_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[4f]"></a>GPIO0_MODE</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO0_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO0_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[4d]"></a>GPIO0_TOGGLE</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO0_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO0_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[80]"></a>GPIO10_GET</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO10_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO10_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[7d]"></a>GPIO10_HIGH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO10_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO10_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[7e]"></a>GPIO10_LOW</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO10_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO10_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[81]"></a>GPIO10_MODE</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO10_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO10_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[7f]"></a>GPIO10_TOGGLE</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO10_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO10_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[85]"></a>GPIO11_GET</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO11_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO11_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[82]"></a>GPIO11_HIGH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO11_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO11_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[83]"></a>GPIO11_LOW</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO11_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO11_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[86]"></a>GPIO11_MODE</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO11_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO11_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[84]"></a>GPIO11_TOGGLE</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO11_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO11_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[8a]"></a>GPIO12_GET</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO12_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO12_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[87]"></a>GPIO12_HIGH</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO12_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO12_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[88]"></a>GPIO12_LOW</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO12_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO12_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[8b]"></a>GPIO12_MODE</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO12_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO12_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[89]"></a>GPIO12_TOGGLE</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO12_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO12_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[8f]"></a>GPIO13_GET</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO13_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO13_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[8c]"></a>GPIO13_HIGH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO13_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO13_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[8d]"></a>GPIO13_LOW</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO13_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO13_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[90]"></a>GPIO13_MODE</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO13_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO13_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[8e]"></a>GPIO13_TOGGLE</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO13_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO13_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[94]"></a>GPIO14_GET</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO14_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO14_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[91]"></a>GPIO14_HIGH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO14_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO14_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[92]"></a>GPIO14_LOW</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO14_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO14_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[95]"></a>GPIO14_MODE</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO14_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO14_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[93]"></a>GPIO14_TOGGLE</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO14_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO14_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[99]"></a>GPIO15_GET</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO15_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO15_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[96]"></a>GPIO15_HIGH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO15_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO15_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[97]"></a>GPIO15_LOW</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO15_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO15_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[9a]"></a>GPIO15_MODE</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO15_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO15_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[98]"></a>GPIO15_TOGGLE</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO15_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO15_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[53]"></a>GPIO1_GET</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO1_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO1_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[50]"></a>GPIO1_HIGH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO1_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO1_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[51]"></a>GPIO1_LOW</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO1_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO1_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[54]"></a>GPIO1_MODE</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO1_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO1_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[52]"></a>GPIO1_TOGGLE</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO1_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO1_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[58]"></a>GPIO2_GET</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO2_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO2_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[55]"></a>GPIO2_HIGH</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO2_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO2_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[56]"></a>GPIO2_LOW</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO2_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO2_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[59]"></a>GPIO2_MODE</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO2_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO2_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[57]"></a>GPIO2_TOGGLE</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO2_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO2_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[5d]"></a>GPIO3_GET</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO3_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO3_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[5a]"></a>GPIO3_HIGH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO3_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO3_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[5b]"></a>GPIO3_LOW</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO3_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO3_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[5e]"></a>GPIO3_MODE</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO3_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO3_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[5c]"></a>GPIO3_TOGGLE</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO3_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO3_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[62]"></a>GPIO4_GET</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO4_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO4_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[5f]"></a>GPIO4_HIGH</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO4_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO4_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[60]"></a>GPIO4_LOW</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO4_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO4_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[63]"></a>GPIO4_MODE</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO4_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO4_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[61]"></a>GPIO4_TOGGLE</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO4_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO4_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[67]"></a>GPIO5_GET</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO5_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO5_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[64]"></a>GPIO5_HIGH</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO5_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO5_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[65]"></a>GPIO5_LOW</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO5_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO5_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[68]"></a>GPIO5_MODE</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO5_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO5_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[66]"></a>GPIO5_TOGGLE</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO5_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO5_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[6c]"></a>GPIO6_GET</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO6_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO6_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[69]"></a>GPIO6_HIGH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO6_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO6_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[6a]"></a>GPIO6_LOW</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO6_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO6_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[6d]"></a>GPIO6_MODE</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO6_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO6_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[6b]"></a>GPIO6_TOGGLE</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO6_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO6_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[71]"></a>GPIO7_GET</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO7_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO7_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[6e]"></a>GPIO7_HIGH</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO7_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO7_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[6f]"></a>GPIO7_LOW</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO7_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO7_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[72]"></a>GPIO7_MODE</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO7_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO7_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[70]"></a>GPIO7_TOGGLE</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO7_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO7_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[76]"></a>GPIO8_GET</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO8_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO8_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[73]"></a>GPIO8_HIGH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO8_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO8_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[74]"></a>GPIO8_LOW</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO8_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO8_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[77]"></a>GPIO8_MODE</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO8_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO8_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[75]"></a>GPIO8_TOGGLE</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO8_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO8_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[7b]"></a>GPIO9_GET</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO9_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO9_GET
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[78]"></a>GPIO9_HIGH</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO9_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO9_HIGH
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[79]"></a>GPIO9_LOW</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO9_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO9_LOW
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[7c]"></a>GPIO9_MODE</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gpio_drv.o(i.GPIO9_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO9_MODE &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[7a]"></a>GPIO9_TOGGLE</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, gpio_drv.o(i.GPIO9_TOGGLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO9_TOGGLE
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_drv.o(i.all_gpio_init)
</UL>
<P><STRONG><a name="[df]"></a>Get_Connecting</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ymodem.o(i.Get_Connecting))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>Get_System_T</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, system_time.o(i.Get_System_T))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_deta_T
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_byte
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>

<P><STRONG><a name="[be]"></a>Get_deta_T</STRONG> (Thumb, 98 bytes, Stack size 28 bytes, system_time.o(i.Get_deta_T))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_deta_T
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_System_T
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_byte
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>

<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>My_Pow</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ymodem.o(i.My_Pow))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str_to_int
</UL>

<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>Receive_byte</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, ymodem.o(i.Receive_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Receive_byte &rArr; Get_deta_T
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_deta_T
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_System_T
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_packet
</UL>

<P><STRONG><a name="[c3]"></a>RingBuffer_Read</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, ringbuffer.o(i.RingBuffer_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RingBuffer_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_byte
</UL>

<P><STRONG><a name="[ce]"></a>RingBuffer_Write</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ringbuffer.o(i.RingBuffer_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RingBuffer_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Recive_Callback
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, system_time.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_gd32f30x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>System_time_init</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, system_time.o(i.System_time_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = System_time_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>USART0_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usart_drv.o(i.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART0_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usart_drv.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usart_drv.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>USART2_IRQ_Callback_Register</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usart_drv.o(i.USART2_IRQ_Callback_Register))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_init
</UL>

<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>Ymodem_Receive</STRONG> (Thumb, 288 bytes, Stack size 2088 bytes, ymodem.o(i.Ymodem_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 2188<LI>Call Chain = Ymodem_Receive &rArr; Receive_packet &rArr; Receive_byte &rArr; Get_deta_T
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_send_byte
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str_to_int
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_packet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>Ymodem_Recive_Callback</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ymodem.o(i.Ymodem_Recive_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Ymodem_Recive_Callback &rArr; RingBuffer_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ymodem.o(i.Ymodem_init)
</UL>
<P><STRONG><a name="[cf]"></a>Ymodem_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ymodem.o(i.Ymodem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Ymodem_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQ_Callback_Register
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>all_gpio_init</STRONG> (Thumb, 610 bytes, Stack size 8 bytes, gpio_drv.o(i.all_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = all_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>delay_us</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, system_time.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = delay_us &rArr; Get_deta_T
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_deta_T
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_System_T
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[b1]"></a>exti_init</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, gd32f30x_exti.o(i.exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_9_IRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>exti_interrupt_flag_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f30x_exti.o(i.exti_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_9_IRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>fmc_bank0_ready_wait</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, gd32f30x_fmc.o(i.fmc_bank0_ready_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fmc_bank0_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank0_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
</UL>

<P><STRONG><a name="[d3]"></a>fmc_bank0_state_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gd32f30x_fmc.o(i.fmc_bank0_state_get))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank0_ready_wait
</UL>

<P><STRONG><a name="[d4]"></a>fmc_bank1_ready_wait</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, gd32f30x_fmc.o(i.fmc_bank1_ready_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fmc_bank1_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank1_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
</UL>

<P><STRONG><a name="[d5]"></a>fmc_bank1_state_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gd32f30x_fmc.o(i.fmc_bank1_state_get))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank1_ready_wait
</UL>

<P><STRONG><a name="[b4]"></a>fmc_lock</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gd32f30x_fmc.o(i.fmc_lock))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[b5]"></a>fmc_page_erase</STRONG> (Thumb, 210 bytes, Stack size 12 bytes, gd32f30x_fmc.o(i.fmc_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fmc_page_erase &rArr; fmc_bank1_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank1_ready_wait
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank0_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[b3]"></a>fmc_unlock</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, gd32f30x_fmc.o(i.fmc_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[b7]"></a>fmc_word_program</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, gd32f30x_fmc.o(i.fmc_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fmc_word_program &rArr; fmc_bank1_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank1_ready_wait
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_bank0_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[d6]"></a>get_gpio_struct</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gpio_drv.o(i.get_gpio_struct))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_gpio_struct &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bb]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_gpio.o(i.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO9_LOW
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO8_LOW
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO7_LOW
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO6_LOW
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO5_LOW
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO4_LOW
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_LOW
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_LOW
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_LOW
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO15_LOW
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO14_LOW
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO13_LOW
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO12_LOW
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO11_LOW
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO10_LOW
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_LOW
</UL>

<P><STRONG><a name="[ba]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_gpio.o(i.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO9_HIGH
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO8_HIGH
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO7_HIGH
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO6_HIGH
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO5_HIGH
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO4_HIGH
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_HIGH
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_HIGH
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_HIGH
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO15_HIGH
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO14_HIGH
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO13_HIGH
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO12_HIGH
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO11_HIGH
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO10_HIGH
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_HIGH
</UL>

<P><STRONG><a name="[bd]"></a>gpio_bit_toggle</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio_drv.o(i.gpio_bit_toggle))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO9_TOGGLE
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO8_TOGGLE
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO7_TOGGLE
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO6_TOGGLE
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO5_TOGGLE
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO4_TOGGLE
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_TOGGLE
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_TOGGLE
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_TOGGLE
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO15_TOGGLE
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO14_TOGGLE
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO13_TOGGLE
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO12_TOGGLE
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO11_TOGGLE
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO10_TOGGLE
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_TOGGLE
</UL>

<P><STRONG><a name="[bc]"></a>gpio_init</STRONG> (Thumb, 188 bytes, Stack size 20 bytes, gd32f30x_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_gpio_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_spi_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO9_MODE
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO8_MODE
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO7_MODE
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO6_MODE
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO5_MODE
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO4_MODE
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_MODE
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_MODE
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_MODE
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO15_MODE
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO14_MODE
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO13_MODE
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO12_MODE
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO11_MODE
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO10_MODE
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_MODE
</UL>

<P><STRONG><a name="[b9]"></a>gpio_input_bit_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_gpio.o(i.gpio_input_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO9_GET
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO8_GET
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO7_GET
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO6_GET
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO5_GET
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO4_GET
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_GET
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_GET
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_GET
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO15_GET
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO14_GET
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO13_GET
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO12_GET
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO11_GET
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO10_GET
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_GET
</UL>

<P><STRONG><a name="[a7]"></a>main</STRONG> (Thumb, 312 bytes, Stack size 88 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 2276<LI>Call Chain = main &rArr; Ymodem_Receive &rArr; Receive_packet &rArr; Receive_byte &rArr; Get_deta_T
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_Control
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_send_byte
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_struct
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_gpio_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_time_init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_deta_T
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_System_T
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Connecting
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_to_APP
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e0]"></a>nvic_irq_enable</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, gd32f30x_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[d7]"></a>nvic_priority_group_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_misc.o(i.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[f7]"></a>rcu_clock_freq_get</STRONG> (Thumb, 310 bytes, Stack size 84 bytes, gd32f30x_rcu.o(i.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[c1]"></a>rcu_deinit</STRONG> (Thumb, 106 bytes, Stack size 4 bytes, gd32f30x_rcu.o(i.rcu_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rcu_deinit &rArr; rcu_osci_stab_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_to_APP
</UL>

<P><STRONG><a name="[e2]"></a>rcu_flag_get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
</UL>

<P><STRONG><a name="[e1]"></a>rcu_osci_stab_wait</STRONG> (Thumb, 266 bytes, Stack size 20 bytes, gd32f30x_rcu.o(i.rcu_osci_stab_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rcu_osci_stab_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_deinit
</UL>

<P><STRONG><a name="[d8]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_spi_init
</UL>

<P><STRONG><a name="[e8]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
</UL>

<P><STRONG><a name="[e7]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
</UL>

<P><STRONG><a name="[fb]"></a>spi_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_spi.o(i.spi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_spi_init
</UL>

<P><STRONG><a name="[e5]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_spi.o(i.spi_i2s_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Send_byte
</UL>

<P><STRONG><a name="[e6]"></a>spi_i2s_deinit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gd32f30x_spi.o(i.spi_i2s_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_i2s_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_spi_init
</UL>

<P><STRONG><a name="[e4]"></a>spi_i2s_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_spi.o(i.spi_i2s_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Send_byte
</UL>

<P><STRONG><a name="[fa]"></a>spi_init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gd32f30x_spi.o(i.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_spi_init
</UL>

<P><STRONG><a name="[f9]"></a>spi_struct_para_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f30x_spi.o(i.spi_struct_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_spi_init
</UL>

<P><STRONG><a name="[db]"></a>usart2_init</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, usart_drv.o(i.usart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = usart2_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_rts_config
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_cts_config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_word_length_set
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_stop_bit_set
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_config
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cc]"></a>usart2_send_byte</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usart_drv.o(i.usart2_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usart2_send_byte &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>usart_baudrate_set</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gd32f30x_usart.o(i.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[c9]"></a>usart_data_receive</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[f6]"></a>usart_data_transmit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_send_byte
</UL>

<P><STRONG><a name="[ea]"></a>usart_deinit</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, gd32f30x_usart.o(i.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[f4]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[f5]"></a>usart_flag_get</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32f30x_usart.o(i.usart_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_send_byte
</UL>

<P><STRONG><a name="[f0]"></a>usart_hardware_flow_cts_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_hardware_flow_cts_config))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[ef]"></a>usart_hardware_flow_rts_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_hardware_flow_rts_config))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[f3]"></a>usart_interrupt_enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gd32f30x_usart.o(i.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[ca]"></a>usart_interrupt_flag_clear</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gd32f30x_usart.o(i.usart_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[c8]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gd32f30x_usart.o(i.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[ec]"></a>usart_parity_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_parity_config))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[f1]"></a>usart_receive_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[ee]"></a>usart_stop_bit_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_stop_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[f2]"></a>usart_transmit_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[ed]"></a>usart_word_length_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_word_length_set))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart2_init
</UL>

<P><STRONG><a name="[de]"></a>ws2812_Control</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, ws2812_drv.o(i.ws2812_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ws2812_Control &rArr; spi_Send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>ws2812_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ws2812_drv.o(i.ws2812_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ws2812_Init &rArr; ws2812_spi_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f8]"></a>ws2812_spi_init</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ws2812_drv.o(i.ws2812_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ws2812_spi_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_struct_para_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_Init
</UL>

<P><STRONG><a name="[fe]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[131]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[fc]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[100]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[fd]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[103]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[dd]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ff]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[dc]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[101]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[102]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[a1]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[132]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[133]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[e9]"></a>system_clock_120m_hxtal</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, system_gd32f30x.o(i.system_clock_120m_hxtal))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[c7]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32f30x.o(i.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_120m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[c0]"></a>Go_to_APP</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, main.o(i.Go_to_APP))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Go_to_APP &rArr; rcu_deinit &rArr; rcu_osci_stab_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>Receive_packet</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, ymodem.o(i.Receive_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Receive_packet &rArr; Receive_byte &rArr; Get_deta_T
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[c5]"></a>Str_to_int</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, ymodem.o(i.Str_to_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Str_to_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[e3]"></a>spi_Send_byte</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ws2812_drv.o(i.spi_Send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_Send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ws2812_Control
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
